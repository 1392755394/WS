# ~~~~~
application.name=com.shovesoft.sp2p

# Application mode
# ~~~~~
# Set to dev to enable instant reloading and other development help.
# Otherwise set to prod.
  application.mode=dev
# prod.application.mode=prod

# Secret key
# 密钥是用来保护cryptographics功能
# 如果您将应用程序部署到多个实例，一定要使用相同的键！
application.secret=1nErq1EdpL5ZLbQy5TNHlbjgdDmmzre4V0QXmDglTnmxF6YpKRIzStiXGpHsWSvL
fixed.secret=GDgLwwdK270Qj1w4

# 数据库备份文件路径
 sql.path=D:/back

# Date format
date.format=yyyy-MM-dd
# date.format.fr=dd/MM/yyyy

# Server configuration
# 如果你需要改变HTTP端口，去掉注释（默认设置为9000）
 http.port=9000
#
# 默认情况下，服务器监听的wilcard地址http.
# You can restrict this.
  http.address=127.0.0.1

# JVM configuration
jvm.memory=-Xms1024m -Xmx1024m -XX:MaxNewSize=1024m -XX:MaxPermSize=1024m -XX:+CMSClassUnloadingEnabled

# java源代码级= > 1.5，1.6或1.7或1.8（实验）
  java.source=1.8

# 数据库连接配置
  db=mysql://root:123456@localhost:3306/sp2p6
# db=mysql://root:DongBang.com#beat2@127.0.0.1:3306/sp2p6

# 连接池的配置
  db.pool.timeout=0
  db.pool.maxSize=300
  db.pool.minSize=10

# 指定要使用的自定义JPA的方言
  jpa.dialect=org.hibernate.dialect.PostgreSQLDialect

# 指定生成DDL模式使用。设置为没有禁用它
 jpa.ddl=none

# 调试SQL语句（登录使用debug级别）:
  jpa.debugSQL=true

# 内容为Blob存储路径
attachments.path=data/attachments

# Memcached configuration
# 启用缓存
 memcached=enabled

# 配置分布式缓存的端口号
 memcached.host=127.0.0.1:11211

# 配置分布式缓存的用户名密码
# memcached.user=
# memcached.password=

# 工作中的网址解析
# ~~~~~~
# When rendering templates with reverse-url-resoling (@@{..}) in Jobs (which do not have an inbound Http.Request),
# ie if sending a HtmlMail, Play need to know which url your users use when accessing your app.
  test.application.baseUrl=http://www.dbp2p.com/
# %prod.application.baseUrl=http://www.dbp2p.com/

# 以下内容，请增加到 play 框架项目的 application.conf 中

# 是否启动拦截器，default is true
 injectionInterceptor=true
# 截获到注入等风险后，转跳到的目标 url
 injectionInterceptor.alert.url=www.dbp2p.com

# 各 Controller 的例外级别，0-最严格；1-严格；2-直接放行，default is 0. 例如：
# SupervisorBidManage=2
# UserQuery=1

# SupervisorBidManage、UserQuery 为需要配置例外的控制器的类名。不配置的则为 0，为最严格规则。
# 控制器的第一个方法请 Copy 如下代码：

#	@Before
#	private static void injectionInterceptor() throws Exception {
#		new com.shove.web.security.InjectionInterceptor().run();
#	}

#	这个方法返回一个字符串，可以对串的值进行判断，如果返回 null, 说明是 ajax 请求，如果是 ""，则说明无拦截到内容，如果有内容，则是拦截到的内容提示。

＃支付运营模式(资金托管／普通网关)
pay.trustFunds=false
pay.domain=www.dbp2p.com
pay.action=http://business.p2p.eimslab.cn:8082/payment/spay
pay.callback.url=http://business.p2p.eimslab.cn:8080/front/PaymentAction/

#环迅支付
ipsURL=https://pay.ips.net.cn/ipayment.aspx
ips_merchant_url=front/account/callback

#网银在线
cbpURL=https://pay3.chinabank.com.cn/PayGate
call_mer_url= front/account/callCbpay   

#宝付
#提交地址
bfURL = https://gw.baofoo.com/payindex
#回调地址
bfBACK = front/account/callBfback 
bfBackReturn=front/home/callBfbackReturnUrl 
#返回地址
PageUrl = front/account/callBfback
#汇潮支付
hcURL =https://pay.ecpss.com/sslpayment
#回调地址
hcBACK = front/home/callHcback   
hcBACKAJ = front/account/callHcback 

#国付宝支付(https://www.gopay.com.cn/PGServer/Trans/WebClientAction.do 旧的线上地址只适用于老的商户号) 
go_url=https://gateway.gopay.com.cn/Trans/WebClientAction.do 
gopay_server_time_url=https://gateway.gopay.com.cn/time.do 
go_mer_url=front/account/gCallback 

#微信
token=
appId=
appSecret=

#晓风支付
spay_url=https://www.gopay.com.cn/PGServer/Trans/WebClientAction.do
spay_merchant_url=http://localhost:9000/front/account/gCallback

# QQ快速登录
authorizationURL_QQ=https://graph.qq.com/oauth2.0/authorize
accessTokenURL_QQ=https://graph.qq.com/oauth2.0/token
clientid_QQ=
secret_QQ=
responseType_QQ=code
getUserINFOURL_QQ=https://graph.qq.com/user/get_user_info
getOpenIDURL_QQ=https://graph.qq.com/oauth2.0/me
# 微博快速登录
authorizationURL_WB=https://api.weibo.com/oauth2/authorize
accessTokenURL_WB=https://api.weibo.com/oauth2/access_token
clientid_WB=
secret_WB=
responseType_WB=code
getUserINFOURL_WB=https://api.weibo.com/2/users/show.json